/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-07-28 00:19:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.subject;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bookmark_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/css/likeList.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("        <!-- 좌측/ 전체 동일한 메뉴바 부분 -->\r\n");
      out.write("       <div class=\"left\">\r\n");
      out.write("            <img src=\"/resources/img/logo.png\" class=\"logo\" alt=\"\">\r\n");
      out.write("            <div class=\"menu_bar\">\r\n");
      out.write("                <button><a href=\"/menu/home\"> 🏠<span> Home</span></a></button><br>\r\n");
      out.write("                <button><a href=\"/menu/subject\">📝<span class=\"not\"> Subject</span></a></button><br>\r\n");
      out.write("                <button><a href=\"/menu/community\">📖<span> Community</span></a></button><br>\r\n");
      out.write("                <button><a href=\"/menu/qna\">📁<span> Q&A</span></a></button><br>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"sebu\">\r\n");
      out.write("                <button><a href=\"\">⚙ Setting</a></button><br>\r\n");
      out.write("                <button><a href=\"/member/logout\">🗑 Log out</a></button><br>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- 우측/ list 부분 -->\r\n");
      out.write("        <div class=\"right\">\r\n");
      out.write("          \r\n");
      out.write("            <div class=\"top\">\r\n");
      out.write("                <div class=\"list_count\" id=\"list_count\">\r\n");
      out.write("                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"25\" fill=\"currentColor\" class=\"bi bi-archive\" viewBox=\"0 0 16 16\">\r\n");
      out.write("                        <path d=\"M0 2a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1v7.5a2.5 2.5 0 0 1-2.5 2.5h-9A2.5 2.5 0 0 1 1 12.5V5a1 1 0 0 1-1-1V2zm2 3v7.5A1.5 1.5 0 0 0 3.5 14h9a1.5 1.5 0 0 0 1.5-1.5V5H2zm13-3H1v2h14V2zM5 7.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z\"/>\r\n");
      out.write("                    </svg>\r\n");
      out.write("                    나의 강의 <span>5</span>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- <button class=\"deleteAll\">전체 삭제</button> -->\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <table class=\"list\" id=\"list\">\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>강의 과목</th>\r\n");
      out.write("                    <th>강의 명</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("           \r\n");
      out.write("                \r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>HTML,CSS</td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <div>\r\n");
      out.write("                            <span>1-1</span>\r\n");
      out.write("                            <a href=\"#\">VSCODE 설치</a>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button type=\"button\" id=\"delBtn\">\r\n");
      out.write("                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\r\n");
      out.write("                                <path d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z\"/>\r\n");
      out.write("                            </svg>\r\n");
      out.write("                        </button> \r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("             \r\n");
      out.write("            </table>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"paging\">\r\n");
      out.write("                <!--페이징-->\r\n");
      out.write("                1 2 3 4 5 6 7 8 9 10 >\r\n");
      out.write("            </div>\r\n");
      out.write("     \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        </div><!--class=\"right\"-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <script src=\"../resources/js/bookmark.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    	getBookmarkList();\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
